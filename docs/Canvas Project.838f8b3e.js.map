{"version":3,"sources":["JS/Paddle.js","JS/CollisionDetection.js","JS/Brick.js","JS/Ball.js","JS/InputHandler.js","JS/Game.js","index.js"],"names":["Paddle","game","width","height","position","x","y","boundary","maxX","minX","maxSpeed","speed","ctx","fillStyle","fillRect","dt","keepWithinCanvas","detectCollision","ball","gameObject","bottomOfBall","size","topOfBall","topOfObject","bottomOfObject","leftOfObject","rightOfObject","Brick","image","document","getElementById","gameBoundary","maxY","minY","paddle","markedForDeletion","reverseBallYSpeed","drawImage","Ball","reset","lives","detectWallCollision","InputHandler","addEventListener","event","keyCode","moveLeft","moveRight","togglePause","start","stop","GAMESTATE","PAUSED","RUNNING","MENU","GAMEOVER","Game","gameState","gameObjects","bricks","col","row","push","forEach","object","update","filter","draw","rect","fill","font","textAlign","fillText","GAME_WIDTH","GAME_HEIGHT","canvas","getContext","lastTime","gameLoop","timestamp","clearRect","requestAnimationFrame"],"mappings":"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","file":"Canvas Project.838f8b3e.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.width = 150;\r\n    this.height = 30;\r\n\r\n    this.position = {\r\n      x: game.width / 2 - this.width / 2,\r\n      y: game.height - this.height - 10,\r\n    };\r\n\r\n    this.boundary = {\r\n      maxX: game.width - this.width,\r\n      minX: 0,\r\n    };\r\n\r\n    this.maxSpeed = 5;\r\n    this.speed = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = \"#0ff\";\r\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  moveLeft() {\r\n    this.speed = -this.maxSpeed;\r\n  }\r\n\r\n  moveRight() {\r\n    this.speed = this.maxSpeed;\r\n  }\r\n\r\n  stop() {\r\n    this.speed = 0;\r\n  }\r\n\r\n  keepWithinCanvas() {\r\n    if (this.position.x < this.boundary.minX)\r\n      this.position.x = this.boundary.minX;\r\n    if (this.position.x > this.boundary.maxX)\r\n      this.position.x = this.boundary.maxX;\r\n  }\r\n\r\n  update(dt) {\r\n    this.position.x -= this.speed;\r\n\r\n    this.keepWithinCanvas();\r\n  }\r\n}\r\n","export  function detectCollision(ball, gameObject) {\r\n  let bottomOfBall = ball.position.y + ball.size;\r\n  let topOfBall = ball.position.y;\r\n\r\n  let topOfObject = gameObject.position.y;\r\n  let bottomOfObject = gameObject.position.y + gameObject.height;\r\n  let leftOfObject = gameObject.position.x;\r\n  let rightOfObject = gameObject.position.x + gameObject.width;\r\n\r\n  return (\r\n    bottomOfBall >= topOfObject &&\r\n    topOfBall <= bottomOfObject &&\r\n    ball.position.x >= leftOfObject &&\r\n    ball.position.x + ball.size <= rightOfObject\r\n  );\r\n}\r\n","import { detectCollision } from \"./CollisionDetection\";\r\n\r\nexport default class Brick {\r\n  constructor(game, position) {\r\n    this.image = document.getElementById(\"img_brick\");\r\n    this.game=game;\r\n    this.width = 52;\r\n    this.height = 24;\r\n\r\n    this.position = position;\r\n\r\n    this.gameBoundary = {\r\n      maxX: game.width - this.size,\r\n      minX: 0,\r\n      maxY: game.height - this.size,\r\n      minY: 0,\r\n    };\r\n\r\n    this.paddle = game.paddle;\r\n\r\n    this.markedForDeletion=false;\r\n  }\r\n\r\n  update(dt) {\r\n\r\n    if (detectCollision(this.game.ball, this)){\r\n        this.game.ball.reverseBallYSpeed();\r\n        this.markedForDeletion=true;\r\n    }\r\n\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n","import { detectCollision } from \"./CollisionDetection\";\r\n\r\nexport default class Ball {\r\n  constructor(game) {\r\n    this.image = document.getElementById(\"img_ball\");\r\n    this.game = game;\r\n    this.size = 16;\r\n\r\n    this.gameBoundary = {\r\n      maxX: game.width - this.size,\r\n      minX: 0,\r\n      maxY: game.height - this.size,\r\n      minY: 0,\r\n    };\r\n\r\n    this.reset();\r\n    this.paddle = game.paddle;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n\r\n  reset() {\r\n    this.speed = {\r\n      x: 5,\r\n      y: -2,\r\n    };\r\n\r\n    this.position = {\r\n      x: 10,\r\n      y: 400,\r\n    };\r\n  }\r\n  detectWallCollision() {\r\n    if (\r\n      this.position.x < this.gameBoundary.minX ||\r\n      this.position.x > this.gameBoundary.maxX\r\n    ) {\r\n      this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    if (this.position.y > this.gameBoundary.maxY) {\r\n      this.game.lives--;\r\n      this.reset();\r\n    }\r\n\r\n    if (\r\n      this.position.y < this.gameBoundary.minY ||\r\n      this.position.y > this.gameBoundary.maxY\r\n    ) {\r\n      this.speed.y = -this.speed.y;\r\n    }\r\n  }\r\n\r\n  update(dt) {\r\n    this.position.x += this.speed.x;\r\n    this.position.y += this.speed.y;\r\n\r\n    // this.keepWithinCanvas();\r\n    this.detectWallCollision();\r\n\r\n    if (detectCollision(this, this.paddle)) {\r\n      this.reverseBallYSpeed();\r\n      this.position.y = this.paddle.position.y - this.size;\r\n    }\r\n  }\r\n\r\n  reverseBallYSpeed() {\r\n    this.speed.y = -this.speed.y;\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 68:\r\n          paddle.moveLeft();\r\n\r\n          break;\r\n\r\n        case 65:\r\n          paddle.moveRight();\r\n          break;\r\n\r\n        case 27:\r\n          game.togglePause();\r\n          break;\r\n        case 32:\r\n          game.start();\r\n          break;\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 68:\r\n          if (paddle.speed < 0) {\r\n            paddle.stop();\r\n          }\r\n\r\n          break;\r\n\r\n        case 65:\r\n          if (paddle.speed > 0) {\r\n            paddle.stop();\r\n          }\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import Paddle from \"./Paddle.js\";\r\nimport Brick from \"./Brick.js\";\r\nimport Ball from \"./Ball.js\";\r\nimport InputHandler from \"./InputHandler.js\";\r\n\r\nconst GAMESTATE = {\r\n  PAUSED: 0,\r\n  RUNNING: 1,\r\n  MENU: 2,\r\n  GAMEOVER: 3,\r\n};\r\nexport default class Game {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.gameState = GAMESTATE.MENU;\r\n    this.lives = 3;\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    new InputHandler(this.paddle, this);\r\n    this.gameObjects = [];\r\n  }\r\n\r\n  start() {\r\n    if (this.gameState === GAMESTATE.MENU) {\r\n      let bricks = [];\r\n\r\n      for (let col = 0; col < 14; col++) {\r\n        for (let row = 0; row < 5; row++) {\r\n          bricks.push(new Brick(this, { x: 35 + col * 52, y: 20 + row * 24 }));\r\n        }\r\n      }\r\n      this.gameObjects = [this.ball, this.paddle, ...bricks];\r\n\r\n      this.gameState = GAMESTATE.RUNNING;\r\n    }\r\n  }\r\n\r\n  update(dt) {\r\n    if (this.lives === 0) this.gameState = GAMESTATE.GAMEOVER;\r\n\r\n    if (\r\n      this.gameState === GAMESTATE.PAUSED ||\r\n      this.gameState === GAMESTATE.MENU ||\r\n      this.gameState === GAMESTATE.GAMEOVER\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.gameObjects.forEach((object) => object.update(dt));\r\n\r\n    this.gameObjects = this.gameObjects.filter(\r\n      (object) => !object.markedForDeletion\r\n    );\r\n  }\r\n\r\n  draw(ctx) {\r\n    this.gameObjects.forEach((object) => object.draw(ctx));\r\n\r\n    if (this.gameState === GAMESTATE.PAUSED) {\r\n      ctx.rect(0, 0, this.width, this.height);\r\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"50px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"Paused\", this.width / 2, this.height / 2);\r\n    } else if (this.gameState === GAMESTATE.MENU) {\r\n      ctx.rect(0, 0, this.width, this.height);\r\n      ctx.fillStyle = \"rgba(0,0,0,1)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"50px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"Press SPACEBAR to start!\", this.width / 2, this.height / 2);\r\n    } else if (this.gameState === GAMESTATE.GAMEOVER) {\r\n      ctx.rect(0, 0, this.width, this.height);\r\n      ctx.fillStyle = \"rgba(0,0,0,1)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"50px Arial\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"GAME OVER\", this.width / 2, this.height / 2);\r\n    }\r\n  }\r\n\r\n  togglePause() {\r\n    if (this.gameState == GAMESTATE.PAUSED) {\r\n      this.gameState = GAMESTATE.RUNNING;\r\n    } else {\r\n      this.gameState = GAMESTATE.PAUSED;\r\n    }\r\n  }\r\n}\r\n","import Game from \"./JS/Game.js\";\r\n\r\nconst GAME_WIDTH = 800,\r\n  GAME_HEIGHT = 600;\r\n\r\nlet canvas = document.getElementById(\"gameScreen\");\r\n\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\r\n\r\nlet lastTime = 0;\r\n\r\nfunction gameLoop(timestamp) {\r\n  let dt = timestamp - lastTime;\r\n  lastTime = timestamp;\r\n\r\n  //Clear Canvas\r\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n  game.update(dt);\r\n  game.draw(ctx);\r\n\r\n  requestAnimationFrame(gameLoop);\r\n}\r\n\r\nrequestAnimationFrame(gameLoop);\r\n"]}